runner:
  semgrep:
    name: semgrep
    cmd: |
      set -xe
      [ -f "$(find $SCRIPTPATH -type f -size +0 -name all_changed_files.txt)" ] &&\
      semgrep \
        -c p/ci \
        -c p/security-audit \
        -c p/xss \
        -c p/nginx \
        -c p/docker \
        -c p/terraform \
        -c p/secrets \
        $(find $SCRIPTPATH/semgrep_rules -name '*.yml' -or -name '*.yaml' | sed 's/^/-c /g') \
        --metrics=off \
        --baseline-commit origin/${GITHUB_BASE_REF:-main} \
        --json \
        | jq -r '.results[] | "\(.extra.severity[0:1]):\(.path):\(.end.line) \(.extra.message)<br><br>Source: \(.extra.metadata.source)<br><br>"' \
        | grep -f $SCRIPTPATH/semgrep_rules/blocklist.txt -v \
        | sed "s/>Source: null</>Source: Brave</g" \
        | sed "s/$/Cc @brave\/sec-team $ASSIGNEES/g"
    errorformat:
      - "%t:%f:%l %m"
  safesvg:
    name: safesvg
    cmd: |
      set -xe
      xargs -0 -n1 -a $SCRIPTPATH/all_changed_files.txt $SCRIPTPATH/xmllint.sh \
      | sed "s/$/<br><br>Run SVGO on your assets<br><br>Cc @brave\/sec-team $ASSIGNEES/g"
    errorformat:
      - "%f:%l: %m"
  tfsec:
    name: tfsec
    cmd: |
      set -e
      [ -f "$(find $SCRIPTPATH -type f -size +0 -name all_changed_files.txt)" ] &&\
      xargs -0 -n1 -a $SCRIPTPATH/all_changed_files.txt | grep '\.tf$' | xargs -r -d '\n' dirname | sort -u \
      | xargs -r -d '\n' $SCRIPTPATH/tfsec.sh \
      | jq -r '.diagnostics[] | "\(.severity[0:1]):\(.location.path):\(.location.range.start.line) \(.message)<br><br>source: \(.code.url)<br><br>"' \
      | sed "s|$PWD/||g" | sort -u | sed "s/$/Cc @brave\/sec-team $ASSIGNEES/g"
    errorformat:
      - "%t:%f:%l %m"
  brakeman:
    name: brakeman
    cmd: |
      set -ex
      find . -name Gemfile.lock | xargs -0 -n1 dirname | sort -u &&\
      xargs -I{} ../.gem/bin/bundler exec brakeman {}
    format:
      brakeman